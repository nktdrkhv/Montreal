using System.Text.RegularExpressions;
using Microsoft.Extensions.Logging;
using Montreal.Bot.Poc.Infrastructure;

namespace Montreal.Bot.Poc.Models;

public static class SeedData
{
    public static Stage ChooseStage = default!;

    public static void DoWork()
    {
        using var context = new BotDbContext();
        bool wasAction = false;

        if (!context.Steps.Any())
        {
            context.Steps.AddRange(CreateStep_Choose(out var routeList));
            context.Stages.Add(routeList);
            ChooseStage = routeList;

            context.Steps.AddRange(CreateStage_Start(out var startStage));
            context.Stages.Add(startStage);

            wasAction = true;
        }

        if (!context.Routes.Any())
        {
            context.Routes.Add(BTU.CreateRoute_BTU());
            context.Routes.Add(MUR.CreateRoute_MMUR());
            context.Routes.Add(EUR.CreateRoute_EUR());
            wasAction = true;
        }

        if (!context.Stages.Any())
        {
            // context.Stages.Add(CreateStage_Start());
            // wasAction = true;
        }


        if (wasAction)
        {
            context.SaveChanges();
            var unbinded = context.Targets.Where(t => t.IsBinded == false);
            foreach (var target in unbinded)
            {
                var pointer = new ContentPointer();

                foreach (var args in target!.Name!.Trim().Split(':'))
                {
                    Console.WriteLine($"–û–±—Ä–∞–±–æ—Ç–∫–∞ {args}");
                    var part = args.Trim().Split('=');
                    if (part.Count() == 2)
                    {
                        var type = part[0];
                        var name = part[1];

                        switch (type)
                        {
                            case "route":
                                var route = context.Routes.Where(r => r.Name == name).SingleOrDefault();
                                //pointer.RouteId = route!.Id;
                                pointer.Route = route;
                                pointer.Type = pointer.Type | ContentType.Route;
                                context.Pointers.Update(pointer);
                                target.Pointer = pointer;
                                break;
                            case "stage":
                                var stage = context.Stages.Where(r => r.Name == name).SingleOrDefault();
                                //pointer.StageId = stage!.Id;
                                pointer.Stage = stage;
                                pointer.Type = pointer.Type | ContentType.Stage;
                                context.Pointers.Update(pointer);
                                target.Pointer = pointer;
                                break;
                            case "step":
                                var step = context.Steps.Where(r => r.Name == name).SingleOrDefault();
                                //pointer.StepId = step!.Id;
                                pointer.Step = step;
                                pointer.Type = pointer.Type | ContentType.Step;
                                context.Pointers.Update(pointer);
                                target.Pointer = pointer;
                                break;
                        }
                    }
                }
                target.IsBinded = true;
                //target.Name = null;
                context.Pointers.Add(pointer);
                context.Targets.Update(target);
                context.SaveChanges();
            }
        }
    }

    public static Step[] CreateStep_Choose(out Stage chooseStage)
    {
        var step0 = new Step()
        {
            Name = "choose_0",
            Fragments = new() { new() { Type = FragmentType.Media,
                Media = new() {new(){Type=MediaType.Photo, Photo = new(){FileId="AgACAgIAAxkBAAIOy2NXEKEdivM2CHICtQS1rXpwZfHiAALMwzEbhDm4So1m_ix_A0qYAQADAgADeQADKgQ"}, Caption ="üóì <b>–í—ã–±–µ—Ä–∏ –¥–µ–Ω—å</b> —Å —Ö–æ—Ä–æ—à–µ–π –ø–æ–≥–æ–¥–æ–π\n\nüì± <b>–ó–∞—Ä—è–¥–∏ —Ç–µ–ª–µ—Ñ–æ–Ω</b> –∏ –≤–æ–∑—å–º–∏ –Ω–∞—É—à–Ω–∏–∫–∏\n\nüå® –°–µ–π—á–∞—Å –ª—É—á—à–µ <b>–æ–¥–µ—Ç—å—Å—è –ø–æ—Ç–µ–ø–ª–µ–µ</b>, –º—ã –≤—Å—ë-—Ç–∞–∫–∏ –≤ –°–∏–±–∏—Ä–∏\n\nüìç –û—Ç–ø—Ä–∞–≤–ª—è–π—Å—è –Ω–∞ <b>—Ç–æ—á–∫—É —Å—Ç–∞—Ä—Ç–∞</b>, –æ–Ω–∞ –±—É–¥–µ—Ç –≤ –æ–ø–∏—Å–∞–Ω–∏–∏" }},
                Buttons = new() {
                    new() {Type = ButtonType.InlineReplace, Label ="–ü–æ —Ç—É —Å—Ç–æ—Ä–æ–Ω—É –ï–≤—Ä–æ–ø–µ–π—Å–∫–æ–≥–æ –∫–≤–∞—Ä—Ç–∞–ª–∞", Line = 1, Target = new(){Name = "step=choose_1"}},
                    new() {Type = ButtonType.InlineReplace, Label ="–ë–æ–ª—å—à–æ–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –¢–æ–º—Å–∫–∞", Line = 2, Target = new(){Name = "step=choose_2"}},
                    new() {Type = ButtonType.InlineReplace, Label ="–ú—É—Ä–∞–ª—ã. –ì—Ä–∞—Ñ—Ñ–∏—Ç–∏. –ó–∞–ø–ª–∞—Ç–∫–∏.", Line= 3, Target = new(){Name = "step=choose_3" },
                }}}}
        };

        chooseStage = new Stage
        {
            Name = "routeList",
            Type = StageType.RouteList,
        };
        var order = new StepInStage() { AttachedStage = chooseStage, Payload = step0, Order = 1, Delay = 0 };
        chooseStage.Steps = new() { order };

        // –ø–æ —Ç—É —Å—Ç–æ—Ä–æ–Ω—É
        var step1 = new Step()
        {
            Name = "choose_1",
            Fragments = new() { new() { Type = FragmentType.Media,
                Media = new() {new(){Type=MediaType.Photo, Photo = new(){FileId="AgACAgIAAxkBAAIOz2NXGgrm8D4s5Fyz6XEeKGPpOAS5AALTwzEbhDm4SgcoYc-8GEAXAQADAgADeQADKgQ"},Caption ="<b>–ü–æ —Ç—É —Å—Ç–æ—Ä–æ–Ω—É –ï–≤—Ä–æ–ø–µ–π—Å–∫–æ–≥–æ –∫–≤–∞—Ä—Ç–∞–ª–∞</b>\n\n–≠—Ç–æ –ø—Ä–æ–≥—É–ª–∫–∞, –≤–æ –≤—Ä–µ–º—è –∫–æ—Ç–æ—Ä–æ–π –º—ã —É–≤–∏–¥–∏–º —Ü–µ–Ω—Ç—Ä –¢–æ–º—Å–∫–∞ —Å –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω—ã. –£–∑–Ω–∞–µ–º, –≥–¥–µ –≤–æ –¥–≤–æ—Ä–∞—Ö –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –∫–æ—Ä–ø—É—Å–æ–≤ –¢–æ–º—Å–∫–æ–≥–æ –ø–æ–ª–∏—Ç–µ—Ö–∞ –ø—Ä–æ—Ñ–µ—Å—Å–æ—Ä–∞ —Å–∞–∂–∞–ª–∏ –∫–∞—Ä—Ç–æ—à–∫—É, –∞ —Å—Ç—É–¥–µ–Ω—Ç—ã –∏–≥—Ä–∞–ª–∏ –≤ —Å–Ω–µ–∂–∫–∏. –ü–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞ —Å—Ç–µ–Ω—É, –∫–æ—Ç–æ—Ä–æ–π –±–æ–ª—å—à–µ 110 –ª–µ—Ç, –∏ –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π –∫—Ç–æ-—Ç–æ –Ω–∞—Å—Ç–æ–π—á–∏–≤–æ –ø–∏—à–µ—Ç –ø–æ—Å–≤—è—â–µ–Ω–∏—è –∫—É–ª—å—Ç–æ–≤–æ–π –≥—Ä—É–ø–ø–µ Pink Floyd. –£—Å–ª—ã—à–∏–º –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ —Ñ–∞–∫—Ç—ã, –º–∞–ª–æ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –ª–µ–≥–µ–Ω–¥—ã –∏ –º–∏—Ñ—ã.\n\n<i>–ò –¥–∞–∂–µ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–≥–æ–≤–æ—Ä–∏–º –ø—Ä–æ –ù–õ–û.</i>"}},
                Buttons = new() {
                    new() {Type = ButtonType.InlineReplace, Label ="–¢–æ—á–∫–∞ —Å—Ç–∞—Ä—Ç–∞", Target = new(){Name = "step=choose_4"}},
                    new() {Type = ButtonType.InlineReplace, Label ="–ù–∞–∑–∞–¥", Target = new(){Name = "step=choose_0"}},
                }}}
        };
        // –±–æ–ª—å—à–æ–π —É–Ω–∏–≤–µ—Ä
        var step2 = new Step()
        {
            Name = "choose_2",
            Fragments = new() { new() { Type = FragmentType.Media,
                Media = new() {new(){Type=MediaType.Photo, Photo = new(){FileId="AgACAgIAAxkBAAIOzWNXGeT5YGqExFLWtDaQJ0jloaYeAALSwzEbhDm4SvfViZaNQdKWAQADAgADeQADKgQ"},Caption="<b>¬´–ë–æ–ª—å—à–æ–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –¢–æ–º—Å–∫–∞¬ª.</b>\n\n–¢–æ–º—Å–∫ ‚Äì —ç—Ç–æ –≥–æ—Ä–æ–¥ –≤—É–∑–æ–≤.\n–ù–∞ —ç—Ç–æ–º –º–∞—Ä—à—Ä—É—Ç–µ —è –ø–æ–∫–∞–∂—É —Ç–µ–±–µ –ø–µ—Ä–≤–æ–µ –≤ –¢–æ–º—Å–∫–µ —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–µ –æ–±—â–µ–∂–∏—Ç–∏–µ, —Ä–∞—Å—Å–∫–∞–∂—É, –∑–∞—á–µ–º —Å—Ç—É–¥–µ–Ω—Ç—ã –∫—Ä–∞—Å—è—Ç —Å–∞–ø–æ–≥–∏ –ö–∏—Ä–æ–≤—É, –∫–∞–∫–æ–π –ø–∞–º—è—Ç–Ω–∏–∫ –ø—Ä–∏–Ω–æ—Å–∏—Ç —Ç–æ–º—Å–∫–∏–º —Å—Ç—É–¥–µ–Ω—Ç–∞–º —É–¥–∞—á—É, –∏ —á—Ç–æ –¥–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å.\n\n–ú—ã –ø—Ä–æ–≥—É–ª—è–µ–º—Å—è –ø–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—Å–∫–∏–º –∫–æ—Ä–ø—É—Å–∞–º, –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º –∏ –≥–ª–∞–≤–Ω—ã–º —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏–º —É–ª–∏—Ü–∞–º –¢–æ–º—Å–∫–∞. –¢—ã —É–∑–Ω–∞–µ—à—å –Ω–µ —Ç–æ–ª—å–∫–æ –æ–± –∏—Å—Ç–æ—Ä–∏–∏ –≤—É–∑–æ–≤, –Ω–æ –∏ –æ–± –æ—Ç–∫—Ä—ã—Ç–∏—è—Ö –∏ —Å—É–¥—å–±–∞—Ö —É—á–µ–Ω—ã—Ö –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–µ–π, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –Ω–∏–º–∏." }},
                Buttons = new() {
                    new() {Type = ButtonType.InlineReplace, Label ="–¢–æ—á–∫–∞ —Å—Ç–∞—Ä—Ç–∞", Target = new(){Name = "step=choose_5"}},
                    new() {Type = ButtonType.InlineReplace, Label ="–ù–∞–∑–∞–¥", Target = new(){Name = "step=choose_0"}},
                }}}
        };
        // –º—É—Ä–∞–ª—ã
        var step3 = new Step()
        {
            Name = "choose_3",
            Fragments = new() { new() { Type = FragmentType.Media,
                Media = new() {new(){Type=MediaType.Photo, Photo = new(){FileId="AgACAgIAAxkBAAIO0WNXGiY4wIhFq1Es7FheEvJfiqYZAAKywzEbhDm4Sqp26tGNxR_eAQADAgADeQADKgQ"}, Caption = "<b>¬´–ú—É—Ä–∞–ª—ã. –ì—Ä–∞—Ñ—Ñ–∏—Ç–∏. –ó–∞–ø–ª–∞—Ç–∫–∏.¬ª</b>\n\n–ó–¥–µ—Å—å —è –ø–æ–∫–∞–∂—É —Ç–µ–±–µ, –≤ –∫–∞–∫–∏—Ö –º–µ—Å—Ç–∞—Ö –¢–æ–º—Å–∫–∞ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ —É–ª–∏—á–Ω–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ. –û—Ç –æ–≥—Ä–æ–º–Ω–æ–π –Ω–∞–¥–ø–∏—Å–∏ –Ω–∞ —Å—Ç–µ–Ω–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏, –¥–æ –∫—Ä–æ—à–µ—á–Ω—ã—Ö –∞—Ä—Ç-–∑–∞–ø–ª–∞—Ç–æ–∫, –æ—Ç –Ω–µ–ª–µ–≥–∞–ª—å–Ω—ã—Ö –º—É—Ä–∞–ª–æ–≤, –¥–æ –Ω–∞—Å–ª–µ–¥–∏—è —Ñ–µ—Å—Ç–∏–≤–∞–ª–µ–π.\n\n–•–æ—á—É, —á—Ç–æ–±—ã —Ç—ã –ø–æ–ª—é–±–∏–ª —ç—Ç–æ –Ω–æ–≤–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ –≤ —Å—Ç–∞—Ä–∏–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ —Ç–∞–∫–∂–µ, –∫–∞–∫ –∏ —è." }},
                Buttons = new() {
                    new() {Type = ButtonType.InlineReplace, Label ="–¢–æ—á–∫–∞ —Å—Ç–∞—Ä—Ç–∞", Target = new(){Name = "step=choose_6"}},
                    new() {Type = ButtonType.InlineReplace, Label ="–ù–∞–∑–∞–¥", Target = new(){Name = "step=choose_0"}},
                }}}
        };

        // –ø–æ —Ç—É —Å—Ç–æ—Ä–æ–Ω—É 8888
        var step4 = new Step()
        {
            Name = "choose_4",
            Fragments = new() { new() { Type = FragmentType.Location,
                Location = new(){
                    Latitude = 56.463957,
                    Longitude = 84.957005,
                    Address = "—É–ª. –£—Å–æ–≤–∞, 9–ë ",
                    Label ="—ç–∫—Å–ø—Ä–µ—Å—Å-–∫–æ—Ñ–µ–π–Ω—è ¬´–¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è –ö–æ—Ñ–µ¬ª",
                },
                Buttons = new() {
                    new() {Type = ButtonType.InlineTransition, Label ="–ò–¥—ë–º –≥—É–ª—è—Ç—å", Target = new(){Name = "route=eur"}},
                    new() {Type = ButtonType.InlineReplace, Label ="–ù–∞–∑–∞–¥", Target = new(){Name = "step=choose_0"}},
                }}}
        };
        // –±–æ–ª—å—à–æ–π —É–Ω–∏–≤–µ—Ä88888
        var step5 = new Step()
        {
            Name = "choose_5",
            Fragments = new() { new() { Type = FragmentType.Location,
                Location = new(){
                    Latitude = 56.465376,
                    Longitude = 84.950432,
                    Address = "–ø—Ä.–õ–µ–Ω–∏–Ω–∞, 30; –≤–æ–∑–ª–µ –≥–ª–∞–≤–Ω–æ–≥–æ –≤—Ö–æ–¥–∞",
                    Label ="–ì–ª–∞–≤–Ω—ã–π –∫–æ—Ä–ø—É—Å –¢–æ–º—Å–∫–æ–≥–æ –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞ ",
                },
                Buttons = new() {
                    new() {Type = ButtonType.InlineTransition, Label ="–ò–¥—ë–º –≥—É–ª—è—Ç—å", Target = new(){Name = "route=btu"}},
                    new() {Type = ButtonType.InlineReplace, Label ="–ù–∞–∑–∞–¥", Target = new(){Name = "step=choose_0"}},
                }}}
        };
        // –º—É—Ä–∞–ª—ã8888
        var step6 = new Step()
        {
            Name = "choose_6",
            Fragments = new() { new() { Type = FragmentType.Media,
                Media = new() {new(){Type=MediaType.Photo, Photo = new(){FileId="AgACAgIAAxkBAAIO02NXHgrwnSKERaxsyQeY1HdAAAEtTQAC1sMxG4Q5uErsOZhvu3Ya-gEAAwIAA3kAAyoE"}, Caption ="–î–≤–æ—Ä –∑–¥–∞–Ω–∏—è —É–ª. –£—Å–æ–≤–∞, 4–∞ / —É–ª. –°–æ–≤–µ—Ç—Å–∫–∞—è, 73 —Å1"}},
                Buttons = new() {
                    new() {Type = ButtonType.InlineTransition, Label ="–ò–¥—ë–º –≥—É–ª—è—Ç—å", Target = new(){Name = "route=mur"}},
                    new() {Type = ButtonType.InlineReplace, Label ="–ù–∞–∑–∞–¥", Target = new(){Name = "step=choose_0"}},
                }}}
        };


        return new Step[] { step0, step1, step2, step3, step4, step5, step6 };
    }

    public static Step[] CreateStage_Start(out Stage startStage)
    {
        var step1_1 = new Step()
        {
            Name = "start_1_1",
            Fragments = new() { new() { Type = FragmentType.Media,
            Media = new() {new(){Type=MediaType.Sound, Sound = new() {Type = SoundType.Voice, Voice=new(){FileId="AwACAgQAAxkBAAIPF2NXRefh4lurEgrgR2aGPciAsVeqAAKcFAACitq4Ut5WDtOtkPQaKgQ"}}}},
        }}
        };

        var step1_2 = new Step()
        {
            Name = "start_1_2",
            Fragments = new() { new() { Type = FragmentType.Media,
            Media = new() {new(){Type=MediaType.Sticker, Sticker = new(){FileId="CAACAgIAAxkBAAIPFWNXRTPXEnT6v7i9irqV52-JCuI6AAKMHwACndxhSsWJ5N_7-0cTKgQ"}}},
                Buttons = new() {
                    new() {Type = ButtonType.KeyboardTransition, Label ="–ú–∞—Ä—à—Ä—É—Ç—ã –ø–æ –¢–æ–º—Å–∫—É", Target = new(){Name = "step=start_3"}},
                    new() {Type = ButtonType.KeyboardTransition, Label ="–û –ø—Ä–æ–µ–∫—Ç–µ", Target = new(){Name = "step=start_2"}},
                }}}
        };

        var step1_3 = new Step()
        {
            Name = "start_1_3",
            Fragments = new() { new() { Type = FragmentType.Media,
            Media = new() {new(){Type=MediaType.Sound, Sound = new() {Type = SoundType.Voice, Voice=new(){FileId="AwACAgQAAxkBAAIPGWNXRhQNkfLMNJyu1wqX_5YsbQnkAAKjFAACitq4UppZonQM4nTxKgQ"}}}},
        }}
        };

        startStage = new Stage
        {
            Name = "welcomeStage",
            Type = StageType.Welcome,
        };
        var order = new List<StepInStage>
        {
            new StepInStage() { AttachedStage = startStage, Payload = step1_1, Order = 2, Delay = 0 },
            new StepInStage() { AttachedStage = startStage, Payload = step1_2, Order = 1, Delay = 0 },
            new StepInStage() { AttachedStage = startStage, Payload = step1_3, Order = 3, Delay = 0 },
        };
        startStage.Steps = order;

        var step2 = new Step()
        {
            Name = "start_2",
            Fragments = new() { new() { Type = FragmentType.Text,
                Text = "<b>–û –ø—Ä–æ–µ–∫—Ç–µ</b>\n–í –ø—Ä–æ—Ü–µ—Å—Å–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è",
                Buttons = new() {
                    new() {Type = ButtonType.KeyboardTransition, Label ="–ú–∞—Ä—à—Ä—É—Ç—ã –ø–æ –¢–æ–º—Å–∫—É", Target = new(){Name = "step=start_3"}},
                }}}
        };

        var step3 = new Step()
        {
            Name = "start_3",
            Fragments = new() { new() { Type = FragmentType.Media,
                Media = new() {new(){Type=MediaType.Photo, Photo = new(){FileId="AgACAgIAAxkBAAIPG2NXRjzGrIqWAv2R3FDO6yIUW6GKAALMwzEbhDm4So1m_ix_A0qYAQADAgADeQADKgQ"}, Caption ="üóì <b>–í—ã–±–µ—Ä–∏ –¥–µ–Ω—å</b> —Å —Ö–æ—Ä–æ—à–µ–π –ø–æ–≥–æ–¥–æ–π\n\nüì± <b>–ó–∞—Ä—è–¥–∏ —Ç–µ–ª–µ—Ñ–æ–Ω</b> –∏ –≤–æ–∑—å–º–∏ –Ω–∞—É—à–Ω–∏–∫–∏\n\nüå® –°–µ–π—á–∞—Å –ª—É—á—à–µ <b>–æ–¥–µ—Ç—å—Å—è –ø–æ—Ç–µ–ø–ª–µ–µ</b>, –º—ã –≤—Å—ë-—Ç–∞–∫–∏ –≤ –°–∏–±–∏—Ä–∏\n\nüìç –û—Ç–ø—Ä–∞–≤–ª—è–π—Å—è –Ω–∞ <b>—Ç–æ—á–∫—É —Å—Ç–∞—Ä—Ç–∞</b>, –æ–Ω–∞ –±—É–¥–µ—Ç –≤ –æ–ø–∏—Å–∞–Ω–∏–∏"}},
                Buttons = new() {
                    new() {Type = ButtonType.KeyboardTransition, Label ="–ü–æ —Ç—É —Å—Ç–æ—Ä–æ–Ω—É –ï–≤—Ä–æ–ø–µ–π—Å–∫–æ–≥–æ –∫–≤–∞—Ä—Ç–∞–ª–∞", Line = 1, Target = new(){Name = "step=start_4"}},
                    new() {Type = ButtonType.KeyboardTransition, Label ="–ë–æ–ª—å—à–æ–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –¢–æ–º—Å–∫–∞", Line = 2, Target = new(){Name = "step=start_6"}},
                    new() {Type = ButtonType.KeyboardTransition, Label ="–ú—É—Ä–∞–ª—ã. –ì—Ä–∞—Ñ—Ñ–∏—Ç–∏. –ó–∞–ø–ª–∞—Ç–∫–∏.", Line= 3, Target = new(){Name = "step=start_8" },
                }}}}
        };

        var step4 = new Step()
        {
            Name = "start_4",
            Fragments = new() { new() { Type = FragmentType.Media,
                Media = new() {new(){Type=MediaType.Photo, Photo = new(){FileId="AgACAgIAAxkBAAIPHWNXRlqPcuoyR-rWREpR17-AVI72AALTwzEbhDm4SgcoYc-8GEAXAQADAgADeQADKgQ"},Caption ="<b>–ü–æ —Ç—É —Å—Ç–æ—Ä–æ–Ω—É –ï–≤—Ä–æ–ø–µ–π—Å–∫–æ–≥–æ –∫–≤–∞—Ä—Ç–∞–ª–∞</b>\n\n–≠—Ç–æ –ø—Ä–æ–≥—É–ª–∫–∞, –≤–æ –≤—Ä–µ–º—è –∫–æ—Ç–æ—Ä–æ–π –º—ã —É–≤–∏–¥–∏–º —Ü–µ–Ω—Ç—Ä –¢–æ–º—Å–∫–∞ —Å –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω—ã. –£–∑–Ω–∞–µ–º, –≥–¥–µ –≤–æ –¥–≤–æ—Ä–∞—Ö –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –∫–æ—Ä–ø—É—Å–æ–≤ –¢–æ–º—Å–∫–æ–≥–æ –ø–æ–ª–∏—Ç–µ—Ö–∞ –ø—Ä–æ—Ñ–µ—Å—Å–æ—Ä–∞ —Å–∞–∂–∞–ª–∏ –∫–∞—Ä—Ç–æ—à–∫—É, –∞ —Å—Ç—É–¥–µ–Ω—Ç—ã –∏–≥—Ä–∞–ª–∏ –≤ —Å–Ω–µ–∂–∫–∏. –ü–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞ —Å—Ç–µ–Ω—É, –∫–æ—Ç–æ—Ä–æ–π –±–æ–ª—å—à–µ 110 –ª–µ—Ç, –∏ –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π –∫—Ç–æ-—Ç–æ –Ω–∞—Å—Ç–æ–π—á–∏–≤–æ –ø–∏—à–µ—Ç –ø–æ—Å–≤—è—â–µ–Ω–∏—è –∫—É–ª—å—Ç–æ–≤–æ–π –≥—Ä—É–ø–ø–µ Pink Floyd. –£—Å–ª—ã—à–∏–º –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ —Ñ–∞–∫—Ç—ã, –º–∞–ª–æ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –ª–µ–≥–µ–Ω–¥—ã –∏ –º–∏—Ñ—ã.\n\n<i>–ò –¥–∞–∂–µ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–≥–æ–≤–æ—Ä–∏–º –ø—Ä–æ –ù–õ–û.</i>" }},
                Buttons = new() {
                    new() {Type = ButtonType.KeyboardTransition, Label ="–¢–æ—á–∫–∞ —Å—Ç–∞—Ä—Ç–∞", Target = new(){Name = "step=start_5"}},
                    new() {Type = ButtonType.KeyboardTransition, Label ="–ù–∞–∑–∞–¥", Target = new(){Name = "step=start_3"}},
                }}}
        };

        var step6 = new Step()
        {
            Name = "start_6",
            Fragments = new() { new() { Type = FragmentType.Media,
                Media = new() {new(){Type=MediaType.Photo, Photo = new(){FileId="AgACAgIAAxkBAAIPH2NXRmpyntiC_ngHwvnjZcndBn0XAALSwzEbhDm4SvfViZaNQdKWAQADAgADeQADKgQ"},Caption="<b>¬´–ë–æ–ª—å—à–æ–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –¢–æ–º—Å–∫–∞¬ª.</b>\n\n–¢–æ–º—Å–∫ ‚Äì —ç—Ç–æ –≥–æ—Ä–æ–¥ –≤—É–∑–æ–≤.\n–ù–∞ —ç—Ç–æ–º –º–∞—Ä—à—Ä—É—Ç–µ —è –ø–æ–∫–∞–∂—É —Ç–µ–±–µ –ø–µ—Ä–≤–æ–µ –≤ –¢–æ–º—Å–∫–µ —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–µ –æ–±—â–µ–∂–∏—Ç–∏–µ, —Ä–∞—Å—Å–∫–∞–∂—É, –∑–∞—á–µ–º —Å—Ç—É–¥–µ–Ω—Ç—ã –∫—Ä–∞—Å—è—Ç —Å–∞–ø–æ–≥–∏ –ö–∏—Ä–æ–≤—É, –∫–∞–∫–æ–π –ø–∞–º—è—Ç–Ω–∏–∫ –ø—Ä–∏–Ω–æ—Å–∏—Ç —Ç–æ–º—Å–∫–∏–º —Å—Ç—É–¥–µ–Ω—Ç–∞–º —É–¥–∞—á—É, –∏ —á—Ç–æ –¥–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å.\n\n–ú—ã –ø—Ä–æ–≥—É–ª—è–µ–º—Å—è –ø–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—Å–∫–∏–º –∫–æ—Ä–ø—É—Å–∞–º, –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º –∏ –≥–ª–∞–≤–Ω—ã–º —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏–º —É–ª–∏—Ü–∞–º –¢–æ–º—Å–∫–∞. –¢—ã —É–∑–Ω–∞–µ—à—å –Ω–µ —Ç–æ–ª—å–∫–æ –æ–± –∏—Å—Ç–æ—Ä–∏–∏ –≤—É–∑–æ–≤, –Ω–æ –∏ –æ–± –æ—Ç–∫—Ä—ã—Ç–∏—è—Ö –∏ —Å—É–¥—å–±–∞—Ö —É—á–µ–Ω—ã—Ö –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–µ–π, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –Ω–∏–º–∏."}},
                Buttons = new() {
                    new() {Type = ButtonType.KeyboardTransition, Label ="–¢–æ—á–∫–∞ —Å—Ç–∞—Ä—Ç–∞", Target = new(){Name = "step=start_9"}},
                    new() {Type = ButtonType.KeyboardTransition, Label ="–ù–∞–∑–∞–¥", Target = new(){Name = "step=start_3"}},
                }}}
        };

        var step8 = new Step()
        {
            Name = "start_8",
            Fragments = new() { new() { Type = FragmentType.Media,
                Media = new() {new(){Type=MediaType.Photo, Photo = new(){FileId="AgACAgIAAxkBAAIPI2NXRowfRoVkbROVVHt5L8maTUHaAAKywzEbhDm4Sqp26tGNxR_eAQADAgADeQADKgQ"}, Caption = "<b>¬´–ú—É—Ä–∞–ª—ã. –ì—Ä–∞—Ñ—Ñ–∏—Ç–∏. –ó–∞–ø–ª–∞—Ç–∫–∏.¬ª</b>\n\n–ó–¥–µ—Å—å —è –ø–æ–∫–∞–∂—É —Ç–µ–±–µ, –≤ –∫–∞–∫–∏—Ö –º–µ—Å—Ç–∞—Ö –¢–æ–º—Å–∫–∞ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ —É–ª–∏—á–Ω–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ. –û—Ç –æ–≥—Ä–æ–º–Ω–æ–π –Ω–∞–¥–ø–∏—Å–∏ –Ω–∞ —Å—Ç–µ–Ω–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏, –¥–æ –∫—Ä–æ—à–µ—á–Ω—ã—Ö –∞—Ä—Ç-–∑–∞–ø–ª–∞—Ç–æ–∫, –æ—Ç –Ω–µ–ª–µ–≥–∞–ª—å–Ω—ã—Ö –º—É—Ä–∞–ª–æ–≤, –¥–æ –Ω–∞—Å–ª–µ–¥–∏—è —Ñ–µ—Å—Ç–∏–≤–∞–ª–µ–π.\n\n–•–æ—á—É, —á—Ç–æ–±—ã —Ç—ã –ø–æ–ª—é–±–∏–ª —ç—Ç–æ –Ω–æ–≤–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ –≤ —Å—Ç–∞—Ä–∏–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ —Ç–∞–∫–∂–µ, –∫–∞–∫ –∏ —è."}},
                Buttons = new() {
                    new() {Type = ButtonType.KeyboardTransition, Label ="–¢–æ—á–∫–∞ —Å—Ç–∞—Ä—Ç–∞", Target = new(){Name = "step=start_7"}},
                    new() {Type = ButtonType.KeyboardTransition, Label ="–ù–∞–∑–∞–¥", Target = new(){Name = "step=start_3"}},
                }}}
        };


        var step5 = new Step()
        {
            Name = "start_5",
            Fragments = new() { new() { Type = FragmentType.Location,
                Location = new(){
                    Latitude = 56.463957,
                    Longitude = 84.957005,
                    Address = "—É–ª. –£—Å–æ–≤–∞, 9–ë ",
                    Label ="—ç–∫—Å–ø—Ä–µ—Å—Å-–∫–æ—Ñ–µ–π–Ω—è ¬´–¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è –ö–æ—Ñ–µ¬ª",
                },
                Buttons = new() {
                    new() {Type = ButtonType.KeyboardTransition, Label ="–ò–¥—ë–º –≥—É–ª—è—Ç—å", Target = new(){Name = "route=eur"}},
                    new() {Type = ButtonType.KeyboardTransition, Label ="–ù–∞–∑–∞–¥", Target = new(){Name = "step=start_3"}},
                }}}
        };

        var step7 = new Step()
        {
            Name = "start_7",
            Fragments = new() { new() { Type = FragmentType.Media,
                Media = new() {new(){Type=MediaType.Photo, Photo = new(){FileId="AgACAgIAAxkBAAIPJWNXRqUxrLzsQo_TxQABiQpS3eVv1QAC1sMxG4Q5uErsOZhvu3Ya-gEAAwIAA3kAAyoE"}, Caption ="–î–≤–æ—Ä –∑–¥–∞–Ω–∏—è —É–ª. –£—Å–æ–≤–∞, 4–∞ / —É–ª. –°–æ–≤–µ—Ç—Å–∫–∞—è, 73 —Å1"}},
                Buttons = new() {
                    new() {Type = ButtonType.KeyboardTransition, Label ="–ò–¥—ë–º –≥—É–ª—è—Ç—å", Target = new(){Name = "route=mur"}},
                    new() {Type = ButtonType.KeyboardTransition, Label ="–ù–∞–∑–∞–¥", Target = new(){Name = "step=start_3"}},
                }}}
        };

        var step9 = new Step()
        {
            Name = "start_9",
            Fragments = new() { new() { Type = FragmentType.Location,
                Location = new(){
                    Latitude = 56.465376,
                    Longitude = 84.950432,
                    Address = "–ø—Ä.–õ–µ–Ω–∏–Ω–∞, 30; –≤–æ–∑–ª–µ –≥–ª–∞–≤–Ω–æ–≥–æ –≤—Ö–æ–¥–∞",
                    Label ="–ì–ª–∞–≤–Ω—ã–π –∫–æ—Ä–ø—É—Å –¢–æ–º—Å–∫–æ–≥–æ –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞ ",
                },
                Buttons = new() {
                    new() {Type = ButtonType.KeyboardTransition, Label ="–ò–¥—ë–º –≥—É–ª—è—Ç—å", Target = new(){Name = "route=btu"}},
                    new() {Type = ButtonType.KeyboardTransition, Label ="–ù–∞–∑–∞–¥", Target = new(){Name = "step=start_3"}},
                }}}
        };


        return new Step[] { step2, step3, step4, step5, step6, step7, step8, step9 };
    }
}